// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://backendboilerplate.com",
        "contact": {
            "name": "Brian Onang'o",
            "email": "brian@backendboilerplate.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.loginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.tokenData"
                        }
                    }
                }
            }
        },
        "/auth/social/facebook": {
            "get": {
                "description": "Log in with fb",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Log in with fb",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facebook code",
                        "name": "Code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                        }
                    }
                }
            }
        },
        "/auth/social/github": {
            "get": {
                "description": "Log in with github",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Log in with github",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Github code",
                        "name": "Code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Github clientId",
                        "name": "clientId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                        }
                    }
                }
            }
        },
        "/auth/social/linkedIn": {
            "get": {
                "description": "Log in with linkedIn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Log in with linkedIn",
                "parameters": [
                    {
                        "type": "string",
                        "description": "linkedIn code",
                        "name": "Code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                        }
                    }
                }
            }
        },
        "/auth/social/twitter": {
            "get": {
                "description": "Log in with twitter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Log in with twitter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Twitter code",
                        "name": "Code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "get": {
                "description": "Get Refresh Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Get Refresh Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.tokenData"
                        }
                    }
                }
            }
        },
        "/book": {
            "get": {
                "description": "Get Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-controller"
                ],
                "summary": "Get Book",
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "Approved",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "AuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "BindingId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ColorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "CoverId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "Edition",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "GradeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "Isbn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "PublisherId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "SizeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "SubjectId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "Title",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "Year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create Book for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-controller"
                ],
                "summary": "Create Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksModels.BookBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Book"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-controller"
                ],
                "summary": "Delete Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Isbn",
                        "name": "Isbn",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update Book for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-controller"
                ],
                "summary": "Update Book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksModels.BookBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Book"
                        }
                    }
                }
            }
        },
        "/bookHolderLibraries": {
            "post": {
                "description": "Create PhysicalBookHolderLibrary for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "physical-books-controller"
                ],
                "summary": "Create PhysicalBookHolderLibrary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PhysicalBookHolderLibrary",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookHolderLibraryBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookHolderLibrary"
                        }
                    }
                }
            }
        },
        "/bookHolderLibrary": {
            "get": {
                "description": "Libraries which have held the book. Or how many times book has been held by selected library. Or if library currently holds book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relays-controller"
                ],
                "summary": "Libraries which have held the book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PhysicalBookHolderLibrary",
                        "name": "PhysicalBookId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibraryId",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "CurrentHolder",
                        "name": "CurrentHolder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookHolderLibrary"
                        }
                    }
                }
            }
        },
        "/bookHolderLibraryBooks": {
            "get": {
                "description": "Books which have been held by Library. Or when books are currrently held by library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relays-controller"
                ],
                "summary": "Read ReadPhysicalBookHolderLibraryBooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LibraryId",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Books Currently Held by Library",
                        "name": "CurrentHolder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookHolderLibrary"
                        }
                    }
                }
            }
        },
        "/bookOwnerLibraries": {
            "post": {
                "description": "Create PhysicalBookOwnerLibrary for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "physical-books-controller"
                ],
                "summary": "Create PhysicalBookOwnerLibrary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PhysicalBookOwnerLibrary",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookOwnerLibraryBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookOwnerLibrary"
                        }
                    }
                }
            }
        },
        "/bookOwnerLibrary": {
            "get": {
                "description": "Libraries which have owned the book. Or how many times book has been owned by selected library. Or if library currently owns book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relays-controller"
                ],
                "summary": "Libraries which have owned the book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PhysicalBookOwnerLibrary",
                        "name": "PhysicalBookId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibraryId",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "CurrentOwner",
                        "name": "CurrentOwner",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookOwnerLibrary"
                        }
                    }
                }
            }
        },
        "/bookOwnerLibraryBooks": {
            "get": {
                "description": "Books which have been owned by Library. Or when books are currrently owned by library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relays-controller"
                ],
                "summary": "Read ReadPhysicalBookOwnerLibraryBooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "LibraryId",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Books Currently Owned by Library",
                        "name": "CurrentOwner",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookOwnerLibrary"
                        }
                    }
                }
            }
        },
        "/books/author": {
            "post": {
                "description": "Create Author for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-author-controller"
                ],
                "summary": "Create Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Author",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Author"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Author for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-author-controller"
                ],
                "summary": "Update Author",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Author",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingAuthorStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Author"
                        }
                    }
                }
            }
        },
        "/books/authors": {
            "get": {
                "description": "Read Author for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-author-controller"
                ],
                "summary": "Read Authors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AuthorId",
                        "name": "AuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author",
                        "name": "Author",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Author"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Author for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-author-controller"
                ],
                "summary": "Delete Authors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "AuthorId",
                        "name": "AuthorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author",
                        "name": "Author",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/binding": {
            "post": {
                "description": "Create Binding for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-binding-controller"
                ],
                "summary": "Create Binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Binding",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Binding"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Binding"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Binding for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-binding-controller"
                ],
                "summary": "Update Binding",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Binding",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingBindingStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Binding"
                        }
                    }
                }
            }
        },
        "/books/bindings": {
            "get": {
                "description": "Read Binding for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-binding-controller"
                ],
                "summary": "Read Bindings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BindingId",
                        "name": "BindingId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Binding",
                        "name": "Binding",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Binding"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Binding for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-binding-controller"
                ],
                "summary": "Delete Bindings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "BindingId",
                        "name": "BindingId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Binding",
                        "name": "Binding",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/color": {
            "post": {
                "description": "Create Color for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-color-controller"
                ],
                "summary": "Create Color",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Color",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Color"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Color"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Color for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-color-controller"
                ],
                "summary": "Update Color",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Color",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingColorStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Color"
                        }
                    }
                }
            }
        },
        "/books/colors": {
            "get": {
                "description": "Read Color for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-color-controller"
                ],
                "summary": "Read Colors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ColorId",
                        "name": "ColorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Color",
                        "name": "Color",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Color"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Color for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-color-controller"
                ],
                "summary": "Delete Colors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ColorId",
                        "name": "ColorId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Color",
                        "name": "Color",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/cover": {
            "post": {
                "description": "Create Cover for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-cover-controller"
                ],
                "summary": "Create Cover",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Cover",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Cover"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Cover"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Cover for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-cover-controller"
                ],
                "summary": "Update Cover",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Cover",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingCoverStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Cover"
                        }
                    }
                }
            }
        },
        "/books/covers": {
            "get": {
                "description": "Read Cover for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-cover-controller"
                ],
                "summary": "Read Covers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CoverId",
                        "name": "CoverId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cover",
                        "name": "Cover",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Cover"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Cover for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-cover-controller"
                ],
                "summary": "Delete Covers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CoverId",
                        "name": "CoverId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cover",
                        "name": "Cover",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/grade": {
            "post": {
                "description": "Create Grade for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-grades-controller"
                ],
                "summary": "Create Grade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Grade",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Grade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Grade"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Grade for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-grades-controller"
                ],
                "summary": "Update Grade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Grade",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingGradeStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Grade"
                        }
                    }
                }
            }
        },
        "/books/grades": {
            "get": {
                "description": "Read Grade for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-grades-controller"
                ],
                "summary": "Read Grades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "GradeId",
                        "name": "GradeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Grade",
                        "name": "Grade",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Grade"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Grade for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-grades-controller"
                ],
                "summary": "Delete Grades",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "GradeId",
                        "name": "GradeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Grade",
                        "name": "Grade",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/publisher": {
            "post": {
                "description": "Create Publisher for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-publisher-controller"
                ],
                "summary": "Create Publisher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Publisher",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Publisher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Publisher"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Publisher for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-publisher-controller"
                ],
                "summary": "Update Publisher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Publisher",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingPublisherStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Publisher"
                        }
                    }
                }
            }
        },
        "/books/publishers": {
            "get": {
                "description": "Read Publisher for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-publisher-controller"
                ],
                "summary": "Read Publishers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "PublisherId",
                        "name": "PublisherId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Publisher",
                        "name": "Publisher",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Publisher"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Publisher for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-publisher-controller"
                ],
                "summary": "Delete Publishers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PublisherId",
                        "name": "PublisherId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Publisher",
                        "name": "Publisher",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/size": {
            "post": {
                "description": "Create Size for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-size-controller"
                ],
                "summary": "Create Size",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Size",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Size"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Size"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Size for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-size-controller"
                ],
                "summary": "Update Size",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Size",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingSizeStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Size"
                        }
                    }
                }
            }
        },
        "/books/sizes": {
            "get": {
                "description": "Read Size for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-size-controller"
                ],
                "summary": "Read Sizes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SizeId",
                        "name": "SizeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size",
                        "name": "Size",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Size"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Size for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-size-controller"
                ],
                "summary": "Delete Sizes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SizeId",
                        "name": "SizeId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size",
                        "name": "Size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/books/subject": {
            "post": {
                "description": "Create Subject for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-subject-controller"
                ],
                "summary": "Create Subject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Subject",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.Subject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Subject"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Subject for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-subject-controller"
                ],
                "summary": "Update Subject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Subject",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booksController.existingSubjectStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Subject"
                        }
                    }
                }
            }
        },
        "/books/subjects": {
            "get": {
                "description": "Read Subject for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-subject-controller"
                ],
                "summary": "Read Subjects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SubjectId",
                        "name": "SubjectId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Subject",
                        "name": "Subject",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booksModels.Subject"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Subject for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "book-subject-controller"
                ],
                "summary": "Delete Subjects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "SubjectId",
                        "name": "SubjectId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Subject",
                        "name": "Subject",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/charities": {
            "get": {
                "description": "Read Charity for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charities-controller"
                ],
                "summary": "Read Charities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CharityId",
                        "name": "CharityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Charity",
                        "name": "Charity",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Approved",
                        "name": "Approved",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/charityModels.Charity"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Charity for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charities-controller"
                ],
                "summary": "Delete Charities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CharityId",
                        "name": "CharityId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Charity",
                        "name": "Charity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/charity": {
            "post": {
                "description": "Create Charity for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charities-controller"
                ],
                "summary": "Create Charity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Charity",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/charitiesController.Charity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/charityModels.Charity"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Charity for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "charities-controller"
                ],
                "summary": "Update Charity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Charity",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/charitiesController.existingCharityStr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/charityModels.Charity"
                        }
                    }
                }
            }
        },
        "/dev": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dev"
                ],
                "summary": "Returns a 200",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/libraries": {
            "get": {
                "description": "Read Library for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries-controller"
                ],
                "summary": "Read Libraries",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Library",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "Personal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "UserId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/libraryModels.Library"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Library for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries-controller"
                ],
                "summary": "Delete Libraries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibraryId",
                        "name": "LibraryId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/library": {
            "post": {
                "description": "Create Library for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries-controller"
                ],
                "summary": "Create Library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Library",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/librariesController.LibraryBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/libraryModels.Library"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Library for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "libraries-controller"
                ],
                "summary": "Update Library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Library",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/librariesController.LibraryBaseWithId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/libraryModels.Library"
                        }
                    }
                }
            }
        },
        "/libraryowner": {
            "post": {
                "description": "Create LibraryOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "library-owners-controller"
                ],
                "summary": "Create LibraryOwner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book LibraryOwner",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/libraryModels.LibraryOwnerBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/libraryModels.LibraryOwner"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update LibraryOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "library-owners-controller"
                ],
                "summary": "Update LibraryOwner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book LibraryOwner",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/libraryModels.LibraryOwnerBaseWithId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/libraryModels.LibraryOwner"
                        }
                    }
                }
            }
        },
        "/libraryowners": {
            "get": {
                "description": "Read LibraryOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "library-owners-controller"
                ],
                "summary": "Read LibraryOwnerOwners",
                "parameters": [
                    {
                        "type": "string",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "LibraryOwnerId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "UserId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/libraryModels.LibraryOwner"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete LibraryOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "library-owners-controller"
                ],
                "summary": "Delete LibraryOwnerOwners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "LibraryOwnerId",
                        "name": "LibraryOwnerId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/noauth/activate": {
            "get": {
                "description": "Activate User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Activate User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Activation Token",
                        "name": "activateToken",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.passwordCode"
                        }
                    }
                }
            }
        },
        "/noauth/forgotPassword": {
            "post": {
                "description": "ForgotPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "ForgotPassword",
                "parameters": [
                    {
                        "description": "Forgot password data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.forgotPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/noauth/resetPassword": {
            "post": {
                "description": "CreatePassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "CreatePassword",
                "parameters": [
                    {
                        "description": "Password data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.resetPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/noauth/user": {
            "post": {
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth-controller"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "X-Authorization",
                        "in": "header"
                    },
                    {
                        "type": "boolean",
                        "description": "Send Activation Email",
                        "name": "sendActivationMail",
                        "in": "query"
                    },
                    {
                        "description": "User",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authModels.UserCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                        }
                    }
                }
            }
        },
        "/physicalBooks": {
            "get": {
                "description": "Read PhysicalBook for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "physical-books-controller"
                ],
                "summary": "Read PhysicalBooks",
                "parameters": [
                    {
                        "type": "string",
                        "name": "Isbn",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "LibraryId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "NameOnCover",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "PhysicalBookId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ShelfId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "Year",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBook"
                        }
                    }
                }
            },
            "post": {
                "description": "Create PhysicalBook for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "physical-books-controller"
                ],
                "summary": "Create PhysicalBook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "PhysicalBook",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBook"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete PhysicalBook for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "physical-books-controller"
                ],
                "summary": "Delete PhysicalBooks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PhysicalBookId",
                        "name": "PhysicalBookId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update PhysicalBook for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "physical-books-controller"
                ],
                "summary": "Update PhysicalBook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book PhysicalBook",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBookBaseWithId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/physicalBookModels.PhysicalBook"
                        }
                    }
                }
            }
        },
        "/shelf": {
            "post": {
                "description": "Create Shelf for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelves-controller"
                ],
                "summary": "Create Shelf",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Shelf",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shelfModels.Shelf"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update Shelf for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelves-controller"
                ],
                "summary": "Update Shelf",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book Shelf",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfBaseWithId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shelfModels.Shelf"
                        }
                    }
                }
            }
        },
        "/shelfowner": {
            "post": {
                "description": "Create ShelfOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelf-owners-controller"
                ],
                "summary": "Create ShelfOwner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book ShelfOwner",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfOwnerBase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfOwner"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update ShelfOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelf-owners-controller"
                ],
                "summary": "Update ShelfOwner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Book ShelfOwner",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfOwnerBaseWithId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfOwner"
                        }
                    }
                }
            }
        },
        "/shelfowners": {
            "get": {
                "description": "Read ShelfOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelf-owners-controller"
                ],
                "summary": "Read ShelfOwnerOwners",
                "parameters": [
                    {
                        "type": "string",
                        "name": "ShelfId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ShelfOwnerId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "UserId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shelfModels.ShelfOwner"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete ShelfOwner for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelf-owners-controller"
                ],
                "summary": "Delete ShelfOwnerOwners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ShelfOwnerId",
                        "name": "ShelfOwnerId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/shelves": {
            "get": {
                "description": "Read Shelf for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelves-controller"
                ],
                "summary": "Read Shelves",
                "parameters": [
                    {
                        "type": "number",
                        "name": "Lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "Lon",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "Shelf",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ShelfId",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "Shop",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "UserId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/shelfModels.Shelf"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Shelf for Book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shelves-controller"
                ],
                "summary": "Delete Shelves",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "X-Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ShelfId",
                        "name": "ShelfId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "authModels.UserCreate": {
            "type": "object",
            "properties": {
                "Authority": {
                    "type": "string"
                },
                "DateOfBirth": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Telephone": {
                    "type": "string"
                }
            }
        },
        "booksController.Author": {
            "type": "object",
            "properties": {
                "Author": {
                    "type": "string"
                }
            }
        },
        "booksController.Binding": {
            "type": "object",
            "properties": {
                "Binding": {
                    "type": "string"
                }
            }
        },
        "booksController.Color": {
            "type": "object",
            "properties": {
                "Color": {
                    "type": "string"
                }
            }
        },
        "booksController.Cover": {
            "type": "object",
            "properties": {
                "Cover": {
                    "type": "string"
                }
            }
        },
        "booksController.Grade": {
            "type": "object",
            "properties": {
                "Grade": {
                    "type": "string"
                }
            }
        },
        "booksController.Publisher": {
            "type": "object",
            "properties": {
                "Publisher": {
                    "type": "string"
                }
            }
        },
        "booksController.Size": {
            "type": "object",
            "properties": {
                "Size": {
                    "type": "string"
                }
            }
        },
        "booksController.Subject": {
            "type": "object",
            "properties": {
                "Subject": {
                    "type": "string"
                }
            }
        },
        "booksController.existingAuthorStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Author": {
                    "type": "string"
                },
                "AuthorId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingBindingStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Binding": {
                    "type": "string"
                },
                "BindingId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingColorStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Color": {
                    "type": "string"
                },
                "ColorId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingCoverStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Cover": {
                    "type": "string"
                },
                "CoverId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingGradeStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Grade": {
                    "type": "string"
                },
                "GradeId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingPublisherStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Publisher": {
                    "type": "string"
                },
                "PublisherId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingSizeStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Size": {
                    "type": "string"
                },
                "SizeId": {
                    "type": "string"
                }
            }
        },
        "booksController.existingSubjectStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Subject": {
                    "type": "string"
                },
                "SubjectId": {
                    "type": "string"
                }
            }
        },
        "booksModels.Author": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Author": {
                    "type": "string"
                },
                "AuthorId": {
                    "type": "string"
                },
                "AuthorLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Binding": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Binding": {
                    "type": "string"
                },
                "BindingId": {
                    "type": "string"
                },
                "BindingLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Book": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Author": {
                    "$ref": "#/definitions/booksModels.Author"
                },
                "AuthorId": {
                    "type": "string"
                },
                "Binding": {
                    "$ref": "#/definitions/booksModels.Binding"
                },
                "BindingId": {
                    "type": "string"
                },
                "Color": {
                    "$ref": "#/definitions/booksModels.Color"
                },
                "ColorId": {
                    "type": "string"
                },
                "Cover": {
                    "$ref": "#/definitions/booksModels.Cover"
                },
                "CoverId": {
                    "type": "string"
                },
                "Edition": {
                    "type": "string"
                },
                "Grade": {
                    "$ref": "#/definitions/booksModels.Grade"
                },
                "GradeId": {
                    "type": "string"
                },
                "Isbn": {
                    "type": "string"
                },
                "Publisher": {
                    "$ref": "#/definitions/booksModels.Publisher"
                },
                "PublisherId": {
                    "type": "string"
                },
                "Size": {
                    "$ref": "#/definitions/booksModels.Size"
                },
                "SizeId": {
                    "type": "string"
                },
                "Subject": {
                    "$ref": "#/definitions/booksModels.Subject"
                },
                "SubjectId": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "booksModels.BookBase": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "AuthorId": {
                    "type": "string"
                },
                "BindingId": {
                    "type": "string"
                },
                "ColorId": {
                    "type": "string"
                },
                "CoverId": {
                    "type": "string"
                },
                "Edition": {
                    "type": "string"
                },
                "GradeId": {
                    "type": "string"
                },
                "Isbn": {
                    "type": "string"
                },
                "PublisherId": {
                    "type": "string"
                },
                "SizeId": {
                    "type": "string"
                },
                "SubjectId": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "booksModels.Color": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Color": {
                    "type": "string"
                },
                "ColorId": {
                    "type": "string"
                },
                "ColorLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Cover": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Cover": {
                    "type": "string"
                },
                "CoverId": {
                    "type": "string"
                },
                "CoverLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Grade": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Grade": {
                    "type": "string"
                },
                "GradeId": {
                    "type": "string"
                },
                "GradeLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Publisher": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Publisher": {
                    "type": "string"
                },
                "PublisherId": {
                    "type": "string"
                },
                "PublisherLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Size": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Size": {
                    "type": "string"
                },
                "SizeId": {
                    "type": "string"
                },
                "SizeLower": {
                    "type": "string"
                }
            }
        },
        "booksModels.Subject": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Subject": {
                    "type": "string"
                },
                "SubjectId": {
                    "type": "string"
                },
                "SubjectLower": {
                    "type": "string"
                }
            }
        },
        "charitiesController.Charity": {
            "type": "object",
            "properties": {
                "Charity": {
                    "type": "string"
                }
            }
        },
        "charitiesController.existingCharityStr": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Charity": {
                    "type": "string"
                },
                "CharityId": {
                    "type": "string"
                }
            }
        },
        "charityModels.Charity": {
            "type": "object",
            "properties": {
                "Approved": {
                    "type": "boolean"
                },
                "Charity": {
                    "type": "string"
                },
                "CharityId": {
                    "type": "string"
                },
                "CharityLower": {
                    "type": "string"
                }
            }
        },
        "controllers.forgotPasswordInput": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                }
            }
        },
        "controllers.loginInput": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "controllers.passwordCode": {
            "type": "object",
            "properties": {
                "Code": {
                    "type": "string"
                }
            }
        },
        "controllers.resetPasswordInput": {
            "type": "object",
            "properties": {
                "Code": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "controllers.tokenData": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "` + "`" + `json:\"Token\"` + "`" + `",
                    "type": "string"
                }
            }
        },
        "github_com_webappbot_backendboilerplate_src_models_auth.User": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "approved": {
                    "type": "boolean"
                },
                "authority": {
                    "type": "string"
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "firstName": {
                    "type": "string"
                },
                "float1": {
                    "type": "number"
                },
                "float2": {
                    "type": "number"
                },
                "float3": {
                    "type": "number"
                },
                "float4": {
                    "type": "number"
                },
                "gender": {
                    "type": "string"
                },
                "int1": {
                    "type": "integer"
                },
                "int2": {
                    "type": "integer"
                },
                "int3": {
                    "type": "integer"
                },
                "int4": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "librariesController.LibraryBase": {
            "type": "object",
            "properties": {
                "Library": {
                    "type": "string"
                },
                "Personal": {
                    "type": "boolean"
                }
            }
        },
        "librariesController.LibraryBaseWithId": {
            "type": "object",
            "properties": {
                "Library": {
                    "type": "string"
                },
                "LibraryId": {
                    "type": "string"
                },
                "Personal": {
                    "type": "boolean"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "libraryModels.Library": {
            "type": "object",
            "properties": {
                "Library": {
                    "type": "string"
                },
                "LibraryId": {
                    "type": "string"
                },
                "LibraryLower": {
                    "type": "string"
                },
                "Personal": {
                    "type": "boolean"
                },
                "User": {
                    "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "libraryModels.LibraryOwner": {
            "type": "object",
            "properties": {
                "Library": {
                    "$ref": "#/definitions/libraryModels.Library"
                },
                "LibraryId": {
                    "type": "string"
                },
                "LibraryOwnerId": {
                    "type": "string"
                },
                "Publisher": {
                    "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "libraryModels.LibraryOwnerBase": {
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "libraryModels.LibraryOwnerBaseWithId": {
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "LibraryOwnerId": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "physicalBookModels.PhysicalBook": {
            "type": "object",
            "properties": {
                "Book": {
                    "type": "string"
                },
                "Library": {
                    "$ref": "#/definitions/libraryModels.Library"
                },
                "LibraryId": {
                    "type": "string"
                },
                "NameOnCover": {
                    "type": "string"
                },
                "PhysicalBookId": {
                    "type": "string"
                },
                "Shelf": {
                    "$ref": "#/definitions/shelfModels.Shelf"
                },
                "ShelfId": {
                    "type": "string"
                },
                "Year": {
                    "description": "Book           booksModels.Book      ` + "`" + `gorm:\"not null;foreignKey:Isbn\" json:\"Book\"` + "`" + `\nBook        booksModels.Book ` + "`" + `gorm:\"not null;foreignKey:Isbn\" json:\"Book\"` + "`" + `\nBook        booksModels.Book ` + "`" + `json:\"Book\"` + "`" + `",
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "physicalBookModels.PhysicalBookBase": {
            "type": "object",
            "properties": {
                "Isbn": {
                    "type": "string"
                },
                "LibraryId": {
                    "type": "string"
                },
                "NameOnCover": {
                    "type": "string"
                },
                "ShelfId": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "physicalBookModels.PhysicalBookBaseWithId": {
            "type": "object",
            "properties": {
                "Isbn": {
                    "type": "string"
                },
                "LibraryId": {
                    "type": "string"
                },
                "NameOnCover": {
                    "type": "string"
                },
                "PhysicalBookId": {
                    "type": "string"
                },
                "ShelfId": {
                    "type": "string"
                },
                "Year": {
                    "type": "integer"
                }
            }
        },
        "physicalBookModels.PhysicalBookHolderLibrary": {
            "type": "object",
            "properties": {
                "Library": {
                    "$ref": "#/definitions/libraryModels.Library"
                },
                "LibraryId": {
                    "type": "string"
                },
                "PhysicalBookHolderLibraryId": {
                    "type": "string"
                },
                "PhysicalBookId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "physicalBookModels.PhysicalBookHolderLibraryBase": {
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "PhysicalBookId": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                }
            }
        },
        "physicalBookModels.PhysicalBookOwnerLibrary": {
            "type": "object",
            "properties": {
                "Library": {
                    "$ref": "#/definitions/libraryModels.Library"
                },
                "LibraryId": {
                    "type": "string"
                },
                "PhysicalBookId": {
                    "type": "string"
                },
                "PhysicalBookOwnerLibraryId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "physicalBookModels.PhysicalBookOwnerLibraryBase": {
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "PhysicalBookId": {
                    "type": "string"
                }
            }
        },
        "shelfModels.Shelf": {
            "type": "object",
            "properties": {
                "Lat": {
                    "type": "number"
                },
                "Lon": {
                    "type": "number"
                },
                "Publisher": {
                    "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                },
                "Shelf": {
                    "type": "string"
                },
                "ShelfId": {
                    "type": "string"
                },
                "ShelfLower": {
                    "type": "string"
                },
                "Shop": {
                    "type": "boolean"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "shelfModels.ShelfBase": {
            "type": "object",
            "properties": {
                "Lat": {
                    "type": "number"
                },
                "Lon": {
                    "type": "number"
                },
                "Shelf": {
                    "type": "string"
                },
                "Shop": {
                    "type": "boolean"
                }
            }
        },
        "shelfModels.ShelfBaseWithId": {
            "type": "object",
            "properties": {
                "Lat": {
                    "type": "number"
                },
                "Lon": {
                    "type": "number"
                },
                "Shelf": {
                    "type": "string"
                },
                "ShelfId": {
                    "type": "string"
                },
                "Shop": {
                    "type": "boolean"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "shelfModels.ShelfOwner": {
            "type": "object",
            "properties": {
                "Publisher": {
                    "$ref": "#/definitions/github_com_webappbot_backendboilerplate_src_models_auth.User"
                },
                "Shelf": {
                    "$ref": "#/definitions/shelfModels.Shelf"
                },
                "ShelfId": {
                    "type": "string"
                },
                "ShelfOwnerId": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "shelfModels.ShelfOwnerBase": {
            "type": "object",
            "properties": {
                "ShelfId": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        },
        "shelfModels.ShelfOwnerBaseWithId": {
            "type": "object",
            "properties": {
                "ShelfId": {
                    "type": "string"
                },
                "ShelfOwnerId": {
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "backendboilerplate API",
	Description:      "backendboilerplate API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
