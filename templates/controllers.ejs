package <%=package%>Controller

import (
    "github.com/gofiber/fiber/v2"
	<% Object.keys(imports).forEach(function(imported) { %>
	<%-imports[imported]%> <% }); 
	%>
    <% if (isDevEnv === true) { %>"fmt"<%}%>
)

// Create<%-modelTitleCase%> godoc
// @Summary      Create <%-modelTitleCase%>
// @Description  Create <%-modelTitleCase%> for <%-package%>
// @Tags         <%-package%>-controller
// @Accept       json
// @Produce      json
func Create<%-modelTitleCase%>(c *fiber.Ctx) error {
    <% if (isDevEnv === true) { %>
        fmt.Println("Create<%-modelTitleCase%>")
        return c.JSON(fiber.Map{"status": "success", "message": fmt.Sprintf("Create<%-modelTitleCase%>"), "data": nil})
      <% } else { %>
        return nil
      <% } %>
}

// Read<%-modelTitleCase%> godoc
// @Summary      Read <%-modelTitleCase%>
// @Description  Read <%-modelTitleCase%> for <%-package%>
// @Tags         <%-package%>-controller
// @Accept       json
// @Produce      json
func Read<%-modelTitleCase%>(c *fiber.Ctx) error {
    <% if (isDevEnv === true) { %>
        fmt.Println("Read<%-modelTitleCase%>")
        return c.JSON(fiber.Map{"status": "success", "message": fmt.Sprintf("Read<%-modelTitleCase%>"), "data": nil})
      <% } else { %>
        return nil
      <% } %>
}

// Delete<%-modelTitleCase%> godoc
// @Summary      Delete <%-modelTitleCase%>
// @Description  Delete <%-modelTitleCase%> for <%-package%>
// @Tags         <%-package%>-controller
// @Accept       json
// @Produce      json
func Delete<%-modelTitleCase%>(c *fiber.Ctx) error {
    <% if (isDevEnv === true) { %>
        fmt.Println("Delete<%-modelTitleCase%>")
        return c.JSON(fiber.Map{"status": "success", "message": fmt.Sprintf("Delete<%-modelTitleCase%>"), "data": nil})
      <% } else { %>
        return nil
      <% } %>
}

// Update<%-modelTitleCase%> godoc
// @Summary      Update <%-modelTitleCase%>
// @Description  Update <%-modelTitleCase%> for <%-package%>
// @Tags         <%-package%>-controller
// @Accept       json
// @Produce      json
func Update<%-modelTitleCase%>(c *fiber.Ctx) error {
    <% if (isDevEnv === true) { %>
        fmt.Println("Update<%-modelTitleCase%>")
        return c.JSON(fiber.Map{"status": "success", "message": fmt.Sprintf("Update<%-modelTitleCase%>"), "data": nil})
      <% } else { %>
        return nil
      <% } %>
}
