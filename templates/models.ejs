package <%=package%>Models

import (
	"gorm.io/gorm"
	<% Object.keys(imports).forEach(function(imported) { %>
	<%-imports[imported]%> <% }); 
	%>
)

type <%=modelTitleCase%> struct {
	<% if (!Primary) { %><%=modelTitleCase%>Id uuid.UUID `gorm:"type:uuid;primary_key; not null;"` <% } %><% Object.keys(fields).forEach(function(field) { %>
	<%= field %> <%= fields[field].type %>  `gorm:"<% if (fields[field].Primary) { %>primary_key;<% } %><% if (fields[field].NotNull) { %>not null;<% } %><% if (fields[field].Unique) { %>unique;<% } %><% if (fields[field].DefaultValue) { %>default:<%-fields[field].DefaultValue%>;<% } %><% if (fields[field].Length) { %>type:varchar(<%-fields[field].Length%>);<% } %><% if (fields[field].misc) { %><%-fields[field].misc%>;<% } %>"`<% }); %>
}

func (<%=modelCamelCase%> *<%=modelTitleCase%>) BeforeCreate(scope *gorm.DB) error {
	if <%=modelCamelCase%>.<%=modelTitleCase%>Id == uuid.Nil { // for update
		<%=modelCamelCase%>.<%=modelTitleCase%>Id = uuid.New()
	}
	return nil
}
